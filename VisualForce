https://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_intro.htm

//стандартні компоненти VFP
https://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_compref.htm

<apex:slds />
<apex:pageMessages />
ApexPages.addMessage(new ApexPages.message(ApexPages.severity.ERROR, e.getMessage()));

//вертає тип сторінки
https://trailhead.salesforce.com/content/learn/modules/lex_dev_visualforce/lex_dev_visualforce_multipurpose_pages
{!$User.UIThemeDisplayed}
{!$User.UITheme}
//js
function isLightningDesktop() {
  return UITheme.getUITheme === "Theme4d";
}
//APEX
UserInfo.getUiThemeDisplayed();
Theme1—Obsolete Salesforce theme
Theme2—Salesforce Classic 2005 user interface theme
Theme3—Salesforce Classic 2010 user interface theme
Theme4d—Modern “Lightning Experience” Salesforce theme
Theme4t—Salesforce mobile app theme
Theme4u—Lightning Console theme
PortalDefault—Salesforce Customer Portal theme
Webstore—Salesforce AppExchange theme


//remove record(row) in table
<apex:column headervalue="Action">
    <apex:commandlink value="Remove" action="{!removeAsset}" immediate="true">
        <!-- Pass the row number to the controller so that we know which row to remove -->
        <apex:param name="assetId" value="{!asset.Id}"/>
    </apex:commandlink>
</apex:column>
public void removeAsset(){
		Id assetId = System.currentPageReference().getparameters().get('assetId');
		//If the contact is an existing contact then add it to the list to delete from the databse
		//Remove the contact from the table
		selectedAssetsMap.remove(assetId);
	}




//static resources
<apex:stylesheet value="{!URLFOR($Resource.jQueryMobile,'jquery.mobile-1.4.5/jquery.mobile-1.4.5.css')}"/> - zip
<apex:includeScript value="{! $Resource.jQuery }"/> - звичайний файл

//get Contact field label
{!$ObjectType.Contact.Fields.LastName.Label}
{!$ObjectType.Custom_Object__c.fields.Field__c.label}


//SVG іконки
<svg class="slds-icon slds-icon-text-default slds-icon_x-small" aria-hidden="true">
    <use xmlns:xlink="http://www.w3.org/1999/xlink" fill="red" xlink:href="/apexpages/slds/latest/assets/icons/utility-sprite/svg/symbols.svg#spinner" />
</svg> 
https://www.lightningdesignsystem.com/icons/

//показати тексти коли ajax почався і закінчився (виконується бекенд)
<apex:commandButton action="{!save}" value="Save" reRender="main-block" status="save-status"/>          
<apex:actionStatus startText=" (saving...)" stopText=" (done)" id="save-status"/>

//показати cпінер коли натиснув на кнопку
<apex:commandButton action="{!changeStageName}" value="Save" reRender="main-form" status="toggle-spinner"/>           
<apex:actionStatus onstart="toggleSpinner();" onstop="toggleSpinner();" id="toggle-spinner"/>
<script>
    function toggleSpinner(){
        document.getElementById('svg-spinner').classList.toggle('active');
    }
</script>

//або
<apex:inputField value="{!caseToInsert.Cost_1__c}">
    <apex:actionSupport action="{!calculationForPartsUsed}" event="onchange" status="actStatusId"/>
</apex:inputField> 
<apex:actionstatus id="actStatusId">
    <apex:facet name="start">
        <div class="waitingSearchDiv" id="el_loading" style="background-color: #DCD6D6;
                                                             height: 100%;opacity:0.65;width:100%;"> 
            <div class="waitingHolder" style="top: 74.2px; width: 91px;">
                <img class="waitingImage" src="/img/loading.gif" title="Please Wait..." />
              <span class="waitingDescription">Loading...</span>
            </div>
        </div>
    </apex:facet>
</apex:actionstatus>




*****************
*****Таблиця*****
*****************
public Map<Id, Asset> selectedAssetsMap {get;set;}
public List<Asset> selectedAssetsList { get { return selectedAssetsMap.values(); } }


<apex:pageBlockTable value="{! Account.contacts}" var="cont">
            <apex:column>
            	<apex:outputLink value="{! URLFOR($Action.Contact.Edit, cont.Id)}">
                	Edit
                </apex:outputLink>
                &nbsp;
                <apex:outputLink value="{! URLFOR($Action.Contact.Delete, cont.Id)}">
                	Del
                </apex:outputLink>
            </apex:column>
            <apex:column value="{!cont.Name}"/>
            <apex:column value="{!cont.Title}"/>
            <apex:column value="{!cont.Phone}"/>
	    
	    <apex:column value="{!wrapAsset.asset.Status}">
                <apex:facet name="header">
                    Status
                </apex:facet>
            </apex:column>
	    
        </apex:pageBlockTable>

//список контактів
<apex:page standardController="Contact" recordSetVar="contacting">
    <apex:pageBlock title="Contacts List">
        
        <!-- Contacts List -->
        <apex:pageBlockTable value="{! contacting }" var="ct">
            <apex:column value="{! ct.FirstName }"/>
            <apex:column value="{! ct.LastName }"/>
            <apex:column value="{! ct.Email }"/>
            <apex:column value="{! ct.Account.Name }"/>
        </apex:pageBlockTable>
        
    </apex:pageBlock>
</apex:page>

********************
*****JavaScript*****
********************
//перевіряти чи visualforce page раниться в lightning
function isLightningExperienceOrSalesforce1() {
    return((typeof sforce != 'undefined') && sforce && (!!sforce.one));
}
if( isLightningExperienceOrSalesforce1() ) {
    alert('lightning');
}
else {
    alert('visualforce');
}

//JS using SOAP in VisualForcePage
<apex:page>
<script src="/soap/ajax/36.0/connection.js" type="text/javascript"></script>
<script type="text/javascript">
    // Query for the preference value
    sforce.connection.sessionId = '{! $Api.Session_ID }';
    var uiPrefQuery = "SELECT Id, UserPreferencesLightningExperiencePreferred " +
                      "FROM User WHERE Id = '{! $User.Id }'";
    var userThemePreferenceResult = sforce.connection.query(uiPrefQuery);
    
    // Display the returned result on the page
    document.addEventListener('DOMContentLoaded', function(event){
        document.getElementById('userThemePreferenceResult').innerHTML = 
            userThemePreferenceResult;
    });
</script>
<h1>userThemePreferenceResult (JSON)</h1>
<pre><span id="userThemePreferenceResult"/></pre>
</apex:page>
